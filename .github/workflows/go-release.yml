on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.21.3.linux-amd64.tar.gz"
          project_path: "./services/auth/cmd/server"
          binary_name: "auth-server"
          extra_files: LICENSE ./services/auth/README.md
          pre_command: export CGO_ENABLED=0
          ldflags: -extldflags -static
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.21.3.linux-amd64.tar.gz"
          project_path: "./services/email/cmd/server"
          binary_name: "email-server"
          extra_files: LICENSE ./services/email/README.md
          pre_command: export CGO_ENABLED=0
          ldflags: -extldflags -static